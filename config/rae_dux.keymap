/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include "german.keycodes"

&sk {
    release-after-ms = <750>;
    quick-release;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS BSPC>;
};

// Layer definitions
#define BASE 0
 #define EXT 1
#define SYM 2
#define SETTINGS 3

#define MY_PSCRN LS(LC(PSCRN))
#define MY_COPY LC(INSERT)
#define MY_PASTE LS(INSERT)
#define VI_U LC(Z)
#define VI_W LC(RIGHT)
#define VI_B LC(LEFT)

/ {
    combos {
        compatible = "zmk,combos";

    // shortcut
    #define COMBO(NAME, BINDINGS, KEYPOS, TIMEOUT) \
          combo_##NAME { \
            timeout-ms = <TIMEOUT>; \
            bindings = <BINDINGS>; \
            key-positions = <KEYPOS>; \
          };

        /*                KEY POSITIONS

          ╭────────────────────╮ ╭────────────────────╮
          │  0   1   2   3   4 │ │  5   6   7   8   9 │
          │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
          │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
          ╰───────╮ 30  31  32 │ │ 33  34  35 ╭───────╯
                  ╰────────────╯ ╰────────────╯        */

        COMBO(caps_word_right, &caps_word, 26 27, 60)
        COMBO(caps_word_left, &caps_word, 22 23, 60)
    };

    behaviors {
        lhm: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            // hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 30 31 32 33 34 35>;
            hold-trigger-key-positions = <5 6 7 8 9 10 11 12 13 15 16 17 18 19 25 26 27 28 29 30 31 32 33 34 35>;
        };

        rhm: right_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            // hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33 34 35>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 16 17 18 19 20 21 22 23 24 30 31 32 33 34 35>;
        };

        base_lt: base_layer_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "BASE_LAYER_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <50>;
            global-quick-tap;
            bindings = <&mo>, <&kp>;
        };

    };

	keymap {
		compatible = "zmk,keymap";

        // Base alpha layer
       		default_layer {
		bindings = <
		&kp DE_Q &kp DE_W &kp DE_E &kp DE_R &kp DE_T 						&kp DE_Z &kp DE_U  &kp DE_I    &kp DE_O   &kp DE_P 
		&kp DE_A &kp DE_S &kp DE_D &kp DE_F &kp DE_G 			        	        &kp DE_H &kp DE_J &kp DE_K &kp DE_L &kp LCTRL
		&kp DE_Y &kp DE_X &kp DE_C &kp DE_V &kp DE_B				      		&kp DE_N &kp DE_M  &kp DE_COMM &kp DE_DOT &kp BSPC
          			&kp ESC &mo EXT &kp LSHIFT  						&kp SPC &mo SYM &kp RET
		>;
		};

 	// Main modifiers and arrow keys
       		ext_layer {
		bindings = <
		&kp DE_ASTR  	&kp DE_PLUS    &kp DE_1    &kp DE_2    &kp DE_3			&kp DE_AT &kp UP &kp DE_EURO &kp DE_SS &kp DE_UDIA 
		&kp DE_SLSH    &kp DE_MINS    &kp DE_4      &kp DE_5     &kp DE_6 		&kp LEFT &kp DOWN  &kp RIGHT &kp DE_ODIA  &kp DE_ADIA 
		&kp DE_EQL    &kp DE_0 		&kp DE_7  &kp DE_8  &kp DE_9 			&kp DE_LPRN &kp DE_RPRN &kp DE_QUES &kp DE_EXLM  &kp BSPC 
					&trans &trans  &kp LSHIFT  					&kp RET &kp DEL &trans
		>;
		};
		
        // High frequency symbols
		sym_layer {
		bindings = <
		&kp DE_LCBR  &kp DE_RCBR &kp DE_QUOT  &kp DE_DQUO  &kp DE_SECT    			&kp ESC  &kp TAB &kp DE_CIRC &kp DE_ACUT &kp DE_GRV 
		&kp DE_LBRC  &kp DE_RBRC  &kp DE_DLR  &kp DE_PERC  &kp DE_AMPR 				&kp LALT &kp LWIN  &kp LSHFT  &kp LCTRL   &kp RALT
		&kp DE_LABK  &kp DE_RABK  &kp DE_SLSH  &kp DE_DEG   &kp DE_UNDS    			&kp DE_TILD  &kp DE_BSLS  &kp DE_PIPE  &kp DE_HASH   &kp DEL
						 &trans &kp K_CALC &kp LG(L)  				&trans  &trans &trans
		>;
		};	
		
	// Used to change the keyboard's settings.
		settings_layer {
		bindings = <
		&kp F1  &kp F2    &kp F3    &kp F4    &kp F5 				&kp F6	 &kp F7   &kp F8   &kp F9  &kp F10
		&kp F11 &kp F12 &trans &trans &trans  					&bt BT_SEL 0 &bt BT_SEL 1  &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 
		&bootloader  &trans &kp K_MUTE &kp K_VOL_DN &kp K_VOL_UP   		&bt BT_SEL 5 &bt BT_CLR  &trans  &trans &bootloader   
				 &trans &trans &trans					&trans &trans &trans
		>;
		};
	};
};
